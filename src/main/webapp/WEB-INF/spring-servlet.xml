<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:context="http://www.springframework.org/schema/context"  
  xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                      http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">

  <!-- Scans within the base package of the application for @Components to configure as beans -->
  <!-- @Controller, @Service, @Configuration, etc. -->
  <context:component-scan base-package="org.example" />
  <!-- Enables the Spring MVC @Controller programming model -->
  <mvc:annotation-driven />
  <!-- fallback to static content -->
  <mvc:resources mapping="/**" location="/" />

  <!-- password-protected pages -->
  <http>
    <intercept-url pattern="/secure" access="ROLE_USER" />
    <http-basic />
    <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
  </http>
  
  <oauth:resource-server id="resourceServerFilter" resource-id="HelloServlet" />

  <authentication-manager>
    <authentication-provider>
      <user-service>
        <user name="user" password="user" authorities="ROLE_USER" />
      </user-service>
    </authentication-provider>
  </authentication-manager>

</beans:beans>
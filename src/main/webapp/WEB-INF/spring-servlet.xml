<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:context="http://www.springframework.org/schema/context"  
  xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                      http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd">

  <!-- Scans within the base package of the application for @Components to configure as beans -->
  <!-- @Controller, @Service, @Configuration, etc. -->
  <context:component-scan base-package="org.example" />
  <!-- Enables the Spring MVC @Controller programming model -->
  <mvc:annotation-driven />
  <!-- And serve static content as well -->
  <mvc:default-servlet-handler />

  <!-- password&OAuth2-protected pages -->
  <http>
    <http-basic />
    <intercept-url pattern="/secure" access="IS_AUTHENTICATED_FULLY" />
    <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
  </http>
  
  <oauth:resource-server id="resourceServerFilter" resource-id="HelloServlet" token-services-ref="tokenServices" />
  
  <beans:bean id="tokenServices" class="org.example.RemoteTokenServices">
    <beans:property name="checkTokenEndpointUrl" value="http://localhost:8082/oauth/check_token" />
    <beans:property name="scope" value="read" />
  </beans:bean>

  <!-- Username/password for HTTP basic auth -->
  <authentication-manager>
    <authentication-provider>
      <user-service>
        <user name="user" password="user" authorities="ROLE_USER" />
      </user-service>
    </authentication-provider>
  </authentication-manager>

  <!-- SSL configuration in rest calls; only required when using an ssl-protected check_token endpoint -->
  <beans:bean id="trustStore" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <beans:property name="targetObject" value="#{@systemProperties}" />
    <beans:property name="targetMethod" value="putAll" />
    <beans:property name="arguments"><beans:props>
      <!-- Certificate Authorities for the rest endpoints -->
      <!-- keytool -importcert -trustcacerts -noprompt -file ca.pem -keystore /tmp/cacert.jks -storepass default -->
      <beans:prop key="javax.net.ssl.trustStore">/tmp/cacerts.jks</beans:prop>
      <beans:prop key="javax.net.ssl.trustStorePassword">default</beans:prop>
      <!-- This service's client certificate -->
      <!-- keytool -importkeystore -srckeystore client.p12 -srcstoretype pkcs12 -srcstorepass xyz -destkeystore /tmp/client.jks -deststorepass default -->
      <beans:prop key="javax.net.ssl.keyStore">/tmp/client.jks</beans:prop>
      <beans:prop key="javax.net.ssl.keyStorePassword">default</beans:prop>
    </beans:props></beans:property>
  </beans:bean>

</beans:beans>
